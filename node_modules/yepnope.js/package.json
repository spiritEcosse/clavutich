{
  "name": "yepnope.js",
  "version": "2.0.0",
  "description": "A Script Loader For Your Conditional Builds",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "expect.js": "^0.2.0",
    "express": "^3.1.0",
    "grunt": "^0.4.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-clean": "^0.4.0",
    "grunt-contrib-concat": "^0.1.3",
    "grunt-contrib-jshint": "^0.3.0",
    "grunt-contrib-uglify": "^0.2.0",
    "grunt-express": "^0.3.1",
    "grunt-mocha": "^0.4.1",
    "mocha": "^1.8.2",
    "mocha-cloud": "git://github.com/SlexAxton/mocha-cloud.git#quit-callback",
    "mocha-cloud-grid-view": "0.0.1",
    "qs": "^0.6.6",
    "term-canvas": "0.0.5"
  },
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/SlexAxton/yepnope.js.git"
  },
  "keywords": [
    "script loader",
    "conditional",
    "html5",
    "browser"
  ],
  "author": {
    "name": "Alex Sexton, Ralph Holzmann"
  },
  "license": "BSD-3-Clause",
  "gitHead": "3342f804e2d48d577485c3d8a7a64ac9a84750f8",
  "readme": "[![Build Status](https://api.travis-ci.org/SlexAxton/yepnope.js.svg?branch=master)](https://travis-ci.org/SlexAxton/yepnope.js)\n\n# Deprecation Notice\n\n**TL;DR: we've replaced what yepnope used to do with a very minimal script to help you do what we think is best for your apps.**\n\nThe authors of yepnope feel that the front-end community now offers better software for loading scripts, as well\nas conditionally loading scripts. None of the APIs for these new tools are quite as easy as yepnope, but we assure\nyou that it's probably worth your while. We don't officially endorse any replacement, however we strongly suggest\nyou follow an approach using modules, and then package up your application using require.js, webpack, browserify,\nor one of the many other excellent **dependency managed** build tools.\n\nWhen it comes to loading things conditionally, we suggest that you output a build for each combination of the things\nyou're testing. This might sound like it will generate a lot of files (it might), but computers are pretty good\nat that. Then you can inline a script into your page that only loads (asynchronously!) a single built script\nthat is tuned to the features of that user. All the performance win of conditional loading, and none of the\nlatency problems of loading 100 things at once.\n\n**We have replaced this repo with a script that will help you load the correct conditional build and will\nonly be taking issues and pull requests for this new script. It retains many of the original functions\nand features as the original yepnope. However it no longer executes scripts in an order. If you're looking\nfor something that specifically does that, you can use an old version of yepnope, or another in-order\nscript loader like LABjs.**\n\nFor these reasons, we're also not going to include yepnope in the next version of Modernizr as `Modernizr.load`.\n\n# yepnope.js\n\nA Script Loader For Your Conditional Builds\n\nBy [@SlexAxton](http://twitter.com/SlexAxton) and [@rlph](http://twitter.com/rlph)\n\n## Example\n\n```javascript\n// It will Do The Right Thingâ„¢ with a .js or .css extension\nyepnope('script.js', {\n  modernimages: Modernizr.webp && Modernizr.apng,\n  css3: Modernizr.borderradius && Modernizr.boxshadow,\n  consoleapis: window.console && window.console.log\n});\n```\n\nAnd a request for `script.js?yep=css3,consoleapis&nope=modernimages` would be made (assuming that set of results).\n\n**It's up to you to serve the correct build file from that url (you should statically build and/or cache this endpoint)**\n\n## With Modernizr\n\nIf you're running a custom build of Modernizr (version 3+), the only \"own properties\" of the `Modernizr` object are the\ntests. All other properties are stored on the prototype. Because of this, you can easily just pass yepnope your `Modernizr`\nobject, and not have to worry about creating a test object.\n\n```javascript\nyepnope('build.js', Modernizr, function() {\n  MyApp.init();\n});\n```\n\n## Just regular script and css injection\n\nWe also expose our underlying script and css injection functions as\n\n* `yepnope.injectJs`\n* `yepnope.injectCss` (The callback does not wait for the css to actually be loaded)\n\nThe `tests` are a good place to look at the uses.\n\n## Customizing the generated URL\n\nIf you need the generated URL from the tests to look a certain way, feel free to override the\n`yepnope.urlFormatter` function.\n\n```javascript\n// change it to only output passing tests, as dashes on the file name\nyepnope.urlFormatter = function(url, tests) {\n  var parts = url.split('.');\n  var extension = parts.pop();\n  var filename = parts.join('.');\n  var passes = [];\n\n  if (tests) {\n    for(var testname in tests) {\n      if (tests.hasOwnProperty(testname) && tests[testname]) {\n        passes.push(testname);\n      }\n    }\n  }\n  if (passes.length) {\n    return filename + '-' + passes.join('-') + '.' + extension;\n  }\n  return url;\n};\n```\n\nThen the url generated from the first example above would be: `script-css3-consoleapis.js`\n\n## Building and Testing\n\n```sh\n# Clone the repo\ngit clone git@github.com:SlexAxton/yepnope.js.git\n\n# Go inside of it\ncd yepnope.js\n\n# Optionally switch branches\ngit checkout <the-branch-you-want>\n\n# Install the dependencies\nnpm install\n\n# Run the tests\ngrunt test\n\n# In order to view them in a browser\ngrunt serve\n\n# Open the test url in a browser\nopen http://127.0.0.1:3333/test/\n\n# Run the tests and build\ngrunt\n```\n\nYour build will be in the `dist/` folder.\n\n## CHANGELOG\n\nVersion 2 is a significant diversion from Version 1.x. We feel that the direction helps developers make the best decisions for performance rather than enabling poor uses.\n\nChanges in 2.0+ :\n\n* Rewrote entire library\n* Relicensed to New BSD\n* Deprecated Library\n\n## License\n\n### BSD-3-Clause License\n\n```\nCopyright (c) 2014, Alex Sexton\nCopyright (c) 2014, Ralph Holzmann\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n##Thanks##\n\n* Dave Artz - A.getJS was a huge code-inspiration for our loader. So he's responsible for a ton of awesome techniques here.\n* Kyle Simpson - He is the creator of LABjs of which a lot of this is inspired by.\n* Stoyan Stefanov - His work on resource preloading has been awesome: [http://www.phpied.com/preload-cssjavascript-without-execution/](http://www.phpied.com/preload-cssjavascript-without-execution/)\n* Steve Souders - His evangelism and work in the space (ControlJS) have brought light to the issues at hand, he is the father of front-end performance.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/SlexAxton/yepnope.js/issues"
  },
  "homepage": "https://github.com/SlexAxton/yepnope.js#readme",
  "_id": "yepnope.js@2.0.0",
  "_shasum": "113003a02c7925ab883b1c07f40badeea104fda1",
  "_from": "git+https://github.com/SlexAxton/yepnope.js.git",
  "_resolved": "git+https://github.com/SlexAxton/yepnope.js.git#3342f804e2d48d577485c3d8a7a64ac9a84750f8"
}
